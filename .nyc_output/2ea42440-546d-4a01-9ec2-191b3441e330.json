{"/Users/rkesters/code/github/path-loader/src/index.ts":{"path":"/Users/rkesters/code/github/path-loader/src/index.ts","statementMap":{"0":{"start":{"line":25,"column":22},"end":{"line":35,"column":3}},"1":{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},"2":{"start":{"line":26,"column":26},"end":{"line":26,"column":33}},"3":{"start":{"line":27,"column":15},"end":{"line":27,"column":52}},"4":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"5":{"start":{"line":29,"column":6},"end":{"line":29,"column":68}},"6":{"start":{"line":29,"column":51},"end":{"line":29,"column":63}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":39}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":33}},"9":{"start":{"line":33,"column":26},"end":{"line":33,"column":33}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":17}},"11":{"start":{"line":36,"column":25},"end":{"line":40,"column":2}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":72}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":21}},"14":{"start":{"line":41,"column":19},"end":{"line":43,"column":1}},"15":{"start":{"line":42,"column":4},"end":{"line":42,"column":126}},"16":{"start":{"line":42,"column":21},"end":{"line":42,"column":126}},"17":{"start":{"line":42,"column":95},"end":{"line":42,"column":126}},"18":{"start":{"line":44,"column":19},"end":{"line":50,"column":1}},"19":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"20":{"start":{"line":45,"column":31},"end":{"line":45,"column":42}},"21":{"start":{"line":46,"column":17},"end":{"line":46,"column":19}},"22":{"start":{"line":47,"column":4},"end":{"line":47,"column":141}},"23":{"start":{"line":47,"column":21},"end":{"line":47,"column":141}},"24":{"start":{"line":47,"column":40},"end":{"line":47,"column":141}},"25":{"start":{"line":47,"column":109},"end":{"line":47,"column":141}},"26":{"start":{"line":48,"column":4},"end":{"line":48,"column":36}},"27":{"start":{"line":49,"column":4},"end":{"line":49,"column":18}},"28":{"start":{"line":51,"column":16},"end":{"line":59,"column":1}},"29":{"start":{"line":52,"column":28},"end":{"line":52,"column":110}},"30":{"start":{"line":52,"column":91},"end":{"line":52,"column":106}},"31":{"start":{"line":53,"column":4},"end":{"line":58,"column":7}},"32":{"start":{"line":54,"column":36},"end":{"line":54,"column":97}},"33":{"start":{"line":54,"column":42},"end":{"line":54,"column":70}},"34":{"start":{"line":54,"column":85},"end":{"line":54,"column":95}},"35":{"start":{"line":55,"column":35},"end":{"line":55,"column":100}},"36":{"start":{"line":55,"column":41},"end":{"line":55,"column":73}},"37":{"start":{"line":55,"column":88},"end":{"line":55,"column":98}},"38":{"start":{"line":56,"column":32},"end":{"line":56,"column":116}},"39":{"start":{"line":57,"column":8},"end":{"line":57,"column":78}},"40":{"start":{"line":60,"column":22},"end":{"line":62,"column":1}},"41":{"start":{"line":61,"column":4},"end":{"line":61,"column":62}},"42":{"start":{"line":63,"column":0},"end":{"line":63,"column":62}},"43":{"start":{"line":64,"column":0},"end":{"line":64,"column":22}},"44":{"start":{"line":65,"column":0},"end":{"line":65,"column":45}},"45":{"start":{"line":66,"column":19},"end":{"line":66,"column":58}},"46":{"start":{"line":67,"column":20},"end":{"line":67,"column":59}},"47":{"start":{"line":68,"column":19},"end":{"line":68,"column":55}},"48":{"start":{"line":69,"column":19},"end":{"line":69,"column":40}},"49":{"start":{"line":70,"column":17},"end":{"line":70,"column":34}},"50":{"start":{"line":71,"column":25},"end":{"line":75,"column":1}},"51":{"start":{"line":76,"column":22},"end":{"line":76,"column":96}},"52":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"53":{"start":{"line":79,"column":8},"end":{"line":79,"column":77}},"54":{"start":{"line":81,"column":4},"end":{"line":81,"column":20}},"55":{"start":{"line":89,"column":19},"end":{"line":89,"column":38}},"56":{"start":{"line":90,"column":17},"end":{"line":90,"column":41}},"57":{"start":{"line":91,"column":4},"end":{"line":98,"column":5}},"58":{"start":{"line":92,"column":8},"end":{"line":97,"column":9}},"59":{"start":{"line":93,"column":12},"end":{"line":93,"column":35}},"60":{"start":{"line":96,"column":12},"end":{"line":96,"column":61}},"61":{"start":{"line":99,"column":4},"end":{"line":99,"column":18}},"62":{"start":{"line":102,"column":4},"end":{"line":107,"column":5}},"63":{"start":{"line":103,"column":8},"end":{"line":103,"column":52}},"64":{"start":{"line":105,"column":9},"end":{"line":107,"column":5}},"65":{"start":{"line":106,"column":8},"end":{"line":106,"column":57}},"66":{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},"67":{"start":{"line":109,"column":8},"end":{"line":109,"column":57}},"68":{"start":{"line":111,"column":9},"end":{"line":113,"column":5}},"69":{"start":{"line":112,"column":8},"end":{"line":112,"column":73}},"70":{"start":{"line":116,"column":4},"end":{"line":134,"column":7}},"71":{"start":{"line":117,"column":24},"end":{"line":117,"column":68}},"72":{"start":{"line":119,"column":8},"end":{"line":119,"column":40}},"73":{"start":{"line":121,"column":23},"end":{"line":121,"column":42}},"74":{"start":{"line":122,"column":34},"end":{"line":122,"column":75}},"75":{"start":{"line":123,"column":21},"end":{"line":123,"column":63}},"76":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"77":{"start":{"line":125,"column":12},"end":{"line":125,"column":24}},"78":{"start":{"line":129,"column":20},"end":{"line":129,"column":77}},"79":{"start":{"line":131,"column":8},"end":{"line":131,"column":32}},"80":{"start":{"line":132,"column":31},"end":{"line":132,"column":83}},"81":{"start":{"line":133,"column":8},"end":{"line":133,"column":35}},"82":{"start":{"line":136,"column":0},"end":{"line":136,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":25,"column":74},"end":{"line":25,"column":75}},"loc":{"start":{"line":25,"column":96},"end":{"line":32,"column":1}},"line":25},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":38},"end":{"line":29,"column":39}},"loc":{"start":{"line":29,"column":49},"end":{"line":29,"column":65}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":6},"end":{"line":32,"column":7}},"loc":{"start":{"line":32,"column":28},"end":{"line":35,"column":1}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":80},"end":{"line":36,"column":81}},"loc":{"start":{"line":36,"column":95},"end":{"line":38,"column":1}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":38,"column":5},"end":{"line":38,"column":6}},"loc":{"start":{"line":38,"column":20},"end":{"line":40,"column":1}},"line":38},"5":{"name":"(anonymous_5)","decl":{"start":{"line":41,"column":50},"end":{"line":41,"column":51}},"loc":{"start":{"line":41,"column":71},"end":{"line":43,"column":1}},"line":41},"6":{"name":"(anonymous_6)","decl":{"start":{"line":44,"column":50},"end":{"line":44,"column":51}},"loc":{"start":{"line":44,"column":65},"end":{"line":50,"column":1}},"line":44},"7":{"name":"(anonymous_7)","decl":{"start":{"line":51,"column":44},"end":{"line":51,"column":45}},"loc":{"start":{"line":51,"column":89},"end":{"line":59,"column":1}},"line":51},"8":{"name":"adopt","decl":{"start":{"line":52,"column":13},"end":{"line":52,"column":18}},"loc":{"start":{"line":52,"column":26},"end":{"line":52,"column":112}},"line":52},"9":{"name":"(anonymous_9)","decl":{"start":{"line":52,"column":70},"end":{"line":52,"column":71}},"loc":{"start":{"line":52,"column":89},"end":{"line":52,"column":108}},"line":52},"10":{"name":"(anonymous_10)","decl":{"start":{"line":53,"column":36},"end":{"line":53,"column":37}},"loc":{"start":{"line":53,"column":63},"end":{"line":58,"column":5}},"line":53},"11":{"name":"fulfilled","decl":{"start":{"line":54,"column":17},"end":{"line":54,"column":26}},"loc":{"start":{"line":54,"column":34},"end":{"line":54,"column":99}},"line":54},"12":{"name":"rejected","decl":{"start":{"line":55,"column":17},"end":{"line":55,"column":25}},"loc":{"start":{"line":55,"column":33},"end":{"line":55,"column":102}},"line":55},"13":{"name":"step","decl":{"start":{"line":56,"column":17},"end":{"line":56,"column":21}},"loc":{"start":{"line":56,"column":30},"end":{"line":56,"column":118}},"line":56},"14":{"name":"(anonymous_14)","decl":{"start":{"line":60,"column":56},"end":{"line":60,"column":57}},"loc":{"start":{"line":60,"column":71},"end":{"line":62,"column":1}},"line":60},"15":{"name":"getScheme","decl":{"start":{"line":77,"column":9},"end":{"line":77,"column":18}},"loc":{"start":{"line":77,"column":29},"end":{"line":82,"column":1}},"line":77},"16":{"name":"getLoader","decl":{"start":{"line":88,"column":9},"end":{"line":88,"column":18}},"loc":{"start":{"line":88,"column":29},"end":{"line":100,"column":1}},"line":88},"17":{"name":"validateArgs","decl":{"start":{"line":101,"column":9},"end":{"line":101,"column":21}},"loc":{"start":{"line":101,"column":43},"end":{"line":114,"column":1}},"line":101},"18":{"name":"load","decl":{"start":{"line":115,"column":9},"end":{"line":115,"column":13}},"loc":{"start":{"line":115,"column":30},"end":{"line":135,"column":1}},"line":115},"19":{"name":"(anonymous_19)","decl":{"start":{"line":116,"column":43},"end":{"line":116,"column":44}},"loc":{"start":{"line":116,"column":56},"end":{"line":134,"column":5}},"line":116}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":22},"end":{"line":35,"column":3}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":57},"end":{"line":35,"column":2}}],"line":25},"1":{"loc":{"start":{"line":25,"column":57},"end":{"line":35,"column":2}},"type":"cond-expr","locations":[{"start":{"line":25,"column":74},"end":{"line":32,"column":1}},{"start":{"line":32,"column":6},"end":{"line":35,"column":1}}],"line":25},"2":{"loc":{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},{"start":{"line":26,"column":4},"end":{"line":26,"column":33}}],"line":26},"3":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"4":{"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":85}},"type":"binary-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":13}},{"start":{"line":28,"column":18},"end":{"line":28,"column":84}}],"line":28},"5":{"loc":{"start":{"line":28,"column":18},"end":{"line":28,"column":84}},"type":"cond-expr","locations":[{"start":{"line":28,"column":34},"end":{"line":28,"column":47}},{"start":{"line":28,"column":50},"end":{"line":28,"column":84}}],"line":28},"6":{"loc":{"start":{"line":28,"column":50},"end":{"line":28,"column":84}},"type":"binary-expr","locations":[{"start":{"line":28,"column":50},"end":{"line":28,"column":63}},{"start":{"line":28,"column":67},"end":{"line":28,"column":84}}],"line":28},"7":{"loc":{"start":{"line":33,"column":4},"end":{"line":33,"column":33}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":33}},{"start":{"line":33,"column":4},"end":{"line":33,"column":33}}],"line":33},"8":{"loc":{"start":{"line":36,"column":25},"end":{"line":40,"column":2}},"type":"binary-expr","locations":[{"start":{"line":36,"column":26},"end":{"line":36,"column":30}},{"start":{"line":36,"column":34},"end":{"line":36,"column":57}},{"start":{"line":36,"column":63},"end":{"line":40,"column":1}}],"line":36},"9":{"loc":{"start":{"line":36,"column":63},"end":{"line":40,"column":1}},"type":"cond-expr","locations":[{"start":{"line":36,"column":80},"end":{"line":38,"column":1}},{"start":{"line":38,"column":5},"end":{"line":40,"column":1}}],"line":36},"10":{"loc":{"start":{"line":41,"column":19},"end":{"line":43,"column":1}},"type":"binary-expr","locations":[{"start":{"line":41,"column":20},"end":{"line":41,"column":24}},{"start":{"line":41,"column":28},"end":{"line":41,"column":45}},{"start":{"line":41,"column":50},"end":{"line":43,"column":1}}],"line":41},"11":{"loc":{"start":{"line":42,"column":21},"end":{"line":42,"column":126}},"type":"if","locations":[{"start":{"line":42,"column":21},"end":{"line":42,"column":126}},{"start":{"line":42,"column":21},"end":{"line":42,"column":126}}],"line":42},"12":{"loc":{"start":{"line":42,"column":25},"end":{"line":42,"column":93}},"type":"binary-expr","locations":[{"start":{"line":42,"column":25},"end":{"line":42,"column":40}},{"start":{"line":42,"column":44},"end":{"line":42,"column":93}}],"line":42},"13":{"loc":{"start":{"line":44,"column":19},"end":{"line":50,"column":1}},"type":"binary-expr","locations":[{"start":{"line":44,"column":20},"end":{"line":44,"column":24}},{"start":{"line":44,"column":28},"end":{"line":44,"column":45}},{"start":{"line":44,"column":50},"end":{"line":50,"column":1}}],"line":44},"14":{"loc":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},{"start":{"line":45,"column":4},"end":{"line":45,"column":42}}],"line":45},"15":{"loc":{"start":{"line":45,"column":8},"end":{"line":45,"column":29}},"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":11}},{"start":{"line":45,"column":15},"end":{"line":45,"column":29}}],"line":45},"16":{"loc":{"start":{"line":47,"column":4},"end":{"line":47,"column":141}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":141}},{"start":{"line":47,"column":4},"end":{"line":47,"column":141}}],"line":47},"17":{"loc":{"start":{"line":47,"column":40},"end":{"line":47,"column":141}},"type":"if","locations":[{"start":{"line":47,"column":40},"end":{"line":47,"column":141}},{"start":{"line":47,"column":40},"end":{"line":47,"column":141}}],"line":47},"18":{"loc":{"start":{"line":47,"column":44},"end":{"line":47,"column":107}},"type":"binary-expr","locations":[{"start":{"line":47,"column":44},"end":{"line":47,"column":59}},{"start":{"line":47,"column":63},"end":{"line":47,"column":107}}],"line":47},"19":{"loc":{"start":{"line":51,"column":16},"end":{"line":59,"column":1}},"type":"binary-expr","locations":[{"start":{"line":51,"column":17},"end":{"line":51,"column":21}},{"start":{"line":51,"column":25},"end":{"line":51,"column":39}},{"start":{"line":51,"column":44},"end":{"line":59,"column":1}}],"line":51},"20":{"loc":{"start":{"line":52,"column":35},"end":{"line":52,"column":109}},"type":"cond-expr","locations":[{"start":{"line":52,"column":56},"end":{"line":52,"column":61}},{"start":{"line":52,"column":64},"end":{"line":52,"column":109}}],"line":52},"21":{"loc":{"start":{"line":53,"column":16},"end":{"line":53,"column":34}},"type":"binary-expr","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":17}},{"start":{"line":53,"column":22},"end":{"line":53,"column":33}}],"line":53},"22":{"loc":{"start":{"line":56,"column":32},"end":{"line":56,"column":115}},"type":"cond-expr","locations":[{"start":{"line":56,"column":46},"end":{"line":56,"column":67}},{"start":{"line":56,"column":70},"end":{"line":56,"column":115}}],"line":56},"23":{"loc":{"start":{"line":57,"column":51},"end":{"line":57,"column":67}},"type":"binary-expr","locations":[{"start":{"line":57,"column":51},"end":{"line":57,"column":61}},{"start":{"line":57,"column":65},"end":{"line":57,"column":67}}],"line":57},"24":{"loc":{"start":{"line":60,"column":22},"end":{"line":62,"column":1}},"type":"binary-expr","locations":[{"start":{"line":60,"column":23},"end":{"line":60,"column":27}},{"start":{"line":60,"column":31},"end":{"line":60,"column":51}},{"start":{"line":60,"column":56},"end":{"line":62,"column":1}}],"line":60},"25":{"loc":{"start":{"line":61,"column":11},"end":{"line":61,"column":61}},"type":"cond-expr","locations":[{"start":{"line":61,"column":37},"end":{"line":61,"column":40}},{"start":{"line":61,"column":43},"end":{"line":61,"column":61}}],"line":61},"26":{"loc":{"start":{"line":61,"column":12},"end":{"line":61,"column":33}},"type":"binary-expr","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":15}},{"start":{"line":61,"column":19},"end":{"line":61,"column":33}}],"line":61},"27":{"loc":{"start":{"line":76,"column":22},"end":{"line":76,"column":96}},"type":"cond-expr","locations":[{"start":{"line":76,"column":51},"end":{"line":76,"column":72}},{"start":{"line":76,"column":75},"end":{"line":76,"column":96}}],"line":76},"28":{"loc":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},{"start":{"line":78,"column":4},"end":{"line":80,"column":5}}],"line":78},"29":{"loc":{"start":{"line":79,"column":19},"end":{"line":79,"column":76}},"type":"cond-expr","locations":[{"start":{"line":79,"column":47},"end":{"line":79,"column":49}},{"start":{"line":79,"column":52},"end":{"line":79,"column":76}}],"line":79},"30":{"loc":{"start":{"line":91,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":98,"column":5}},{"start":{"line":91,"column":4},"end":{"line":98,"column":5}}],"line":91},"31":{"loc":{"start":{"line":92,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":97,"column":9}},{"start":{"line":92,"column":8},"end":{"line":97,"column":9}}],"line":92},"32":{"loc":{"start":{"line":101,"column":32},"end":{"line":101,"column":41}},"type":"default-arg","locations":[{"start":{"line":101,"column":39},"end":{"line":101,"column":41}}],"line":101},"33":{"loc":{"start":{"line":102,"column":4},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":107,"column":5}},{"start":{"line":102,"column":4},"end":{"line":107,"column":5}}],"line":102},"34":{"loc":{"start":{"line":105,"column":9},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":105,"column":9},"end":{"line":107,"column":5}},{"start":{"line":105,"column":9},"end":{"line":107,"column":5}}],"line":105},"35":{"loc":{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},{"start":{"line":108,"column":4},"end":{"line":113,"column":5}}],"line":108},"36":{"loc":{"start":{"line":111,"column":9},"end":{"line":113,"column":5}},"type":"if","locations":[{"start":{"line":111,"column":9},"end":{"line":113,"column":5}},{"start":{"line":111,"column":9},"end":{"line":113,"column":5}}],"line":111},"37":{"loc":{"start":{"line":111,"column":13},"end":{"line":111,"column":77}},"type":"binary-expr","locations":[{"start":{"line":111,"column":13},"end":{"line":111,"column":32}},{"start":{"line":111,"column":36},"end":{"line":111,"column":77}}],"line":111},"38":{"loc":{"start":{"line":117,"column":24},"end":{"line":117,"column":68}},"type":"cond-expr","locations":[{"start":{"line":117,"column":59},"end":{"line":117,"column":63}},{"start":{"line":117,"column":66},"end":{"line":117,"column":68}}],"line":117},"39":{"loc":{"start":{"line":117,"column":24},"end":{"line":117,"column":56}},"type":"binary-expr","locations":[{"start":{"line":117,"column":24},"end":{"line":117,"column":37}},{"start":{"line":117,"column":41},"end":{"line":117,"column":56}}],"line":117},"40":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{"line":124,"column":8},"end":{"line":126,"column":9}}],"line":124},"41":{"loc":{"start":{"line":129,"column":20},"end":{"line":129,"column":77}},"type":"cond-expr","locations":[{"start":{"line":129,"column":56},"end":{"line":129,"column":60}},{"start":{"line":129,"column":63},"end":{"line":129,"column":77}}],"line":129}},"s":{"0":1,"1":2,"2":2,"3":2,"4":2,"5":2,"6":0,"7":2,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":1,"16":2,"17":2,"18":1,"19":2,"20":2,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":17,"30":17,"31":17,"32":11,"33":11,"34":0,"35":6,"36":6,"37":6,"38":28,"39":17,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":17,"53":17,"54":17,"55":17,"56":17,"57":17,"58":6,"59":6,"60":0,"61":17,"62":17,"63":0,"64":17,"65":0,"66":17,"67":0,"68":17,"69":0,"70":17,"71":17,"72":17,"73":17,"74":17,"75":17,"76":11,"77":11,"78":0,"79":0,"80":0,"81":0,"82":1},"f":{"0":2,"1":0,"2":0,"3":0,"4":0,"5":1,"6":2,"7":17,"8":17,"9":17,"10":17,"11":11,"12":6,"13":28,"14":1,"15":17,"16":17,"17":17,"18":17,"19":17},"b":{"0":[1,1,1],"1":[1,0],"2":[2,0],"3":[2,0],"4":[2,2],"5":[0,2],"6":[2,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[2,0],"12":[2,2],"13":[1,1,1],"14":[2,0],"15":[2,2],"16":[0,0],"17":[0,0],"18":[0,0],"19":[1,1,1],"20":[0,17],"21":[17,17],"22":[11,17],"23":[17,17],"24":[1,1,1],"25":[0,1],"26":[1,1],"27":[0,1],"28":[17,0],"29":[6,11],"30":[6,11],"31":[6,0],"32":[0],"33":[0,17],"34":[0,17],"35":[0,17],"36":[0,17],"37":[17,2],"38":[8,9],"39":[17,17],"40":[11,0],"41":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rkesters/code/github/path-loader/src/index.ts","sources":["/Users/rkesters/code/github/path-loader/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 Jeremy Whitlock\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './typedefs';\n\nimport * as HttpLoader from './loaders/http';\nimport * as FilerLoader from './loaders/file';\nimport Bluebird from 'bluebird';\nimport { isLoadOptions, Loader, LoadOptions, LoadOptionsBase, Response } from './typedefs';\nimport { isEmpty, isPlainObject, isUndefined } from 'lodash';\n\ntype LoadModule = { load: Loader };\nconst supportedLoaders: Record<string, LoadModule> = {\n    file: FilerLoader,\n    http: HttpLoader,\n    https: HttpLoader,\n};\nconst defaultLoader: LoadModule = typeof window === 'object' ? supportedLoaders.http : supportedLoaders.file;\n\nfunction getScheme(location: string): string {\n    if (!isUndefined(location)) {\n        location = !location.includes('://') ? '' : location.split('://')[0];\n    }\n\n    return location;\n}\n\n/**\n * Utility that provides a single API for loading the content of a path/URL.\n *\n * @module path-loader\n */\n\nfunction getLoader(location: string): LoadModule {\n    const scheme = getScheme(location);\n    let loader = supportedLoaders[scheme];\n\n    if (isUndefined(loader)) {\n        if (isEmpty(scheme)) {\n            loader = defaultLoader;\n        } else {\n            throw new Error('Unsupported scheme: ' + scheme);\n        }\n    }\n\n    return loader;\n}\n\nfunction validateArgs(location: string, opts: LoadOptions | LoadOptionsBase = {}) {\n    if (typeof location === 'undefined') {\n        throw new TypeError('location is required');\n    } else if (typeof location !== 'string') {\n        throw new TypeError('location must be a string');\n    }\n    if (typeof opts !== 'object') {\n        throw new TypeError('options must be an object');\n    } else if ((opts as LoadOptions).processContent && typeof (opts as LoadOptions).processContent !== 'function') {\n        throw new TypeError('options.processContent must be a function');\n    }\n}\n\n/**\n * Loads a document at the provided location and returns a JavaScript object representation.\n *\n * @param {string} location - The location to the document\n * @param {module:path-loader.LoadOptions} [options] - The loader options\n *\n * @returns {Promise<*>} Always returns a promise even if there is a callback provided\n *\n * @example\n * // Example using Promises\n *\n * PathLoader\n *   .load('./package.json')\n *   .then(JSON.parse)\n *   .then(function (document) {\n *     console.log(document.name + ' (' + document.version + '): ' + document.description);\n *   }, function (err) {\n *     console.error(err.stack);\n *   });\n *\n * @example\n * // Example using options.prepareRequest to provide authentication details for a remotely secure URL\n *\n * PathLoader\n *   .load('https://api.github.com/repos/whitlockjc/path-loader', {\n *     prepareRequest: function (req, callback) {\n *       req.auth('my-username', 'my-password');\n *       callback(undefined, req);\n *     }\n *   })\n *   .then(JSON.parse)\n *   .then(function (document) {\n *     console.log(document.full_name + ': ' + document.description);\n *   }, function (err) {\n *     console.error(err.stack);\n *   });\n *\n * @example\n * // Example loading a YAML file\n *\n * PathLoader\n *   .load('/Users/not-you/projects/path-loader/.travis.yml')\n *   .then(YAML.safeLoad)\n *   .then(function (document) {\n *     console.log('path-loader uses the', document.language, 'language.');\n *   }, function (err) {\n *     console.error(err.stack);\n *   });\n *\n * @example\n * // Example loading a YAML file with options.processContent (Useful if you need information in the raw response)\n *\n * PathLoader\n *   .load('/Users/not-you/projects/path-loader/.travis.yml', {\n *     processContent: function (res, callback) {\n *       callback(YAML.safeLoad(res.text));\n *     }\n *   })\n *   .then(function (document) {\n *     console.log('path-loader uses the', document.language, 'language.');\n *   }, function (err) {\n *     console.error(err.stack);\n *   });\n */\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function load(location: string): Promise<string | Response>;\nexport async function load(location: string, opts: LoadOptionsBase): Promise<string | Response>;\nexport async function load<T = any>(location: string, opts: LoadOptions<T>): Promise<T>;\nexport async function load<T = any>(\n    location: string,\n    opts?: LoadOptions<T> | LoadOptionsBase\n): Promise<(string | Response) | T> {\n    const options: LoadOptions<T> | LoadOptionsBase = opts ?? {};\n    // Validate arguments\n    validateArgs(location, options);\n\n    // Load the document from the provided location and process it\n    const loader: LoadModule = getLoader(location);\n    const promisifiedLoader = Bluebird.promisify(loader.load);\n\n    const data: string | Response = await promisifiedLoader(location, options);\n\n    if (!isLoadOptions<T>(options)) {\n        return data;\n    }\n    // For consistency between file and http, always send an object with a 'text' property containing the raw\n    // string value being processed.\n    const res: Response = isPlainObject(data) ? (data as Response) : ({ text: data } as unknown as Response);\n\n    // Pass the path being loaded\n    res.location = location;\n    const processContent = Bluebird.promisify(options.processContent);\n\n    return processContent(res);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fa18c6d1e934a2e9a7c7fbc8e56856f39d4bf4ae"},"/Users/rkesters/code/github/path-loader/src/typedefs.ts":{"path":"/Users/rkesters/code/github/path-loader/src/typedefs.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":6,"column":4},"end":{"line":7,"column":21}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":21}},"5":{"start":{"line":8,"column":4},"end":{"line":24,"column":5}},"6":{"start":{"line":9,"column":8},"end":{"line":23,"column":9}},"7":{"start":{"line":22,"column":12},"end":{"line":22,"column":25}},"8":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"9":{"start":{"line":26,"column":8},"end":{"line":26,"column":21}},"10":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"11":{"start":{"line":29,"column":8},"end":{"line":29,"column":21}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":16}},"13":{"start":{"line":33,"column":0},"end":{"line":33,"column":46}},"14":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"15":{"start":{"line":36,"column":8},"end":{"line":36,"column":21}},"16":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"17":{"start":{"line":39,"column":8},"end":{"line":39,"column":21}},"18":{"start":{"line":42,"column":0},"end":{"line":42,"column":38}}},"fnMap":{"0":{"name":"isLoadOptionsBase","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":32,"column":1}},"line":5},"1":{"name":"isLoadOptions","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":22}},"loc":{"start":{"line":34,"column":30},"end":{"line":41,"column":1}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":21}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":21}},{"start":{"line":6,"column":4},"end":{"line":7,"column":21}}],"line":6},"1":{"loc":{"start":{"line":8,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":24,"column":5}},{"start":{"line":8,"column":4},"end":{"line":24,"column":5}}],"line":8},"2":{"loc":{"start":{"line":9,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":23,"column":9}},{"start":{"line":9,"column":8},"end":{"line":23,"column":9}}],"line":9},"3":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{"line":25,"column":4},"end":{"line":27,"column":5}}],"line":25},"4":{"loc":{"start":{"line":25,"column":8},"end":{"line":25,"column":112}},"type":"cond-expr","locations":[{"start":{"line":25,"column":45},"end":{"line":25,"column":104}},{"start":{"line":25,"column":107},"end":{"line":25,"column":112}}],"line":25},"5":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"6":{"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":130}},"type":"cond-expr","locations":[{"start":{"line":28,"column":53},"end":{"line":28,"column":122}},{"start":{"line":28,"column":125},"end":{"line":28,"column":130}}],"line":28},"7":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{"line":35,"column":4},"end":{"line":37,"column":5}}],"line":35},"8":{"loc":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},{"start":{"line":38,"column":4},"end":{"line":40,"column":5}}],"line":38},"9":{"loc":{"start":{"line":38,"column":10},"end":{"line":38,"column":124}},"type":"binary-expr","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":52}},{"start":{"line":38,"column":56},"end":{"line":38,"column":124}}],"line":38}},"s":{"0":1,"1":1,"2":1,"3":11,"4":0,"5":11,"6":1,"7":0,"8":11,"9":0,"10":11,"11":0,"12":11,"13":1,"14":11,"15":0,"16":11,"17":9,"18":1},"f":{"0":11,"1":11},"b":{"0":[0,11],"1":[1,10],"2":[0,1],"3":[0,11],"4":[1,10],"5":[0,11],"6":[1,10],"7":[0,11],"8":[9,2],"9":[11,2]},"inputSourceMap":{"version":3,"file":"/Users/rkesters/code/github/path-loader/src/typedefs.ts","sources":["/Users/rkesters/code/github/path-loader/src/typedefs.ts"],"names":[],"mappings":";;;AAAA,mCAAuE;AAoBvE,SAAgB,iBAAiB,CAAC,KAAc;IAC5C,IAAI,CAAC,IAAA,sBAAa,EAAC,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC;IAExC,IAAI,IAAA,YAAG,EAAC,KAAK,EAAE,UAAU,CAAC,EAAE;QACxB,IACI,CAAC;YACG,OAAO;YACP,MAAM;YACN,OAAO;YACP,SAAS;YACT,MAAM;YACN,OAAO;YACP,QAAQ;YACR,WAAW;YACX,QAAQ;YACR,QAAQ;YACR,KAAK;SACR,CAAC,QAAQ,CAAC,IAAA,YAAG,EAAC,KAAK,EAAE,UAAU,CAAC,CAAC,EACpC;YACE,OAAO,KAAK,CAAC;SAChB;KACJ;IAED,IAAI,IAAA,YAAG,EAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAA,iBAAQ,EAAC,IAAA,YAAG,EAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;QAChE,OAAO,KAAK,CAAC;KAChB;IACD,IAAI,IAAA,YAAG,EAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAA,mBAAU,EAAC,IAAA,YAAG,EAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;QAClF,OAAO,KAAK,CAAC;KAChB;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AA/BD,8CA+BC;AACD,SAAgB,aAAa,CAAU,KAAc;IACjD,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;QAC3B,OAAO,KAAK,CAAC;KAChB;IACD,IAAI,CAAC,CAAC,IAAA,YAAG,EAAC,KAAK,EAAE,gBAAgB,CAAC,IAAI,IAAA,mBAAU,EAAC,IAAA,YAAG,EAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE;QAC7E,OAAO,KAAK,CAAC;KAChB;AACL,CAAC;AAPD,sCAOC","sourcesContent":["import { get, has, isFunction, isPlainObject, isString } from 'lodash';\nimport { SuperAgentRequest, Response as SuperAgentResponse } from 'superagent';\n\n// export type LoaderReturn<T> = [T] extends [never] ? (string | SuperAgentResponse) : T\n\nexport interface Response extends SuperAgentResponse {\n    location: string;\n}\nexport interface LoadCallback {\n    (err: Error | null): void;\n    (err: Error | null, data: string | Response): void;\n    (err: Error | null, data?: string | Response): void;\n}\n\nexport interface Loader<T = any> {\n    (location: string, options: LoadOptions<T>, callback: LoadCallback): void;\n    (location: string, options: LoadOptionsBase, callback: LoadCallback): void;\n    (location: string, options: LoadOptionsBase | LoadOptions<T>, callback: LoadCallback): void;\n}\n\nexport function isLoadOptionsBase(value: unknown): value is LoadOptionsBase {\n    if (!isPlainObject(value)) return false;\n\n    if (has(value, 'encoding')) {\n        if (\n            ![\n                'ascii',\n                'utf8',\n                'utf-8',\n                'utf16le',\n                'ucs2',\n                'ucs-2',\n                'base64',\n                'base64url',\n                'latin1',\n                'binary',\n                'hex',\n            ].includes(get(value, 'encoding'))\n        ) {\n            return false;\n        }\n    }\n\n    if (has(value, 'method') ? !isString(get(value, 'method')) : false) {\n        return false;\n    }\n    if (has(value, 'prepareRequest') ? !isFunction(get(value, 'prepareRequest')) : false) {\n        return false;\n    }\n\n    return true;\n}\nexport function isLoadOptions<T = any>(value: unknown): value is LoadOptions<T> {\n    if (!isLoadOptionsBase(value)) {\n        return false;\n    }\n    if (!(has(value, 'processContent') && isFunction(get(value, 'processContent')))) {\n        return false;\n    }\n}\n\nexport interface LoadOptionsBase {\n    /**\n     * The encoding to use when loading the file *(File loader only)*\n     */\n    encoding?: BufferEncoding;\n    /**\n     * The HTTP method to use for the request *(HTTP loader only)*\n     */\n    method?: string;\n    /**\n     * The callback used to prepare the request *(HTTP loader only)*\n     */\n    prepareRequest?: PrepareRequestCallback;\n}\n/**\n * Options used when loading a path.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface LoadOptions<T = any> extends LoadOptionsBase {\n    /**\n     * The callback used to process the response\n     */\n    processContent: ProcessResponseCallback<T>;\n}\n\n/**\n * Callback used to provide access to altering a remote request prior to the request being made.\n * @param req - The Superagent request object\n * @param location - The location being retrieved\n * @param callback - First callback\n */\nexport interface PrepareRequestCallback {\n    (req: SuperAgentRequest, callback: RequestCallback): void;\n    (req: SuperAgentRequest, location: string, callback: RequestCallback): void;\n    (req: SuperAgentRequest, location: string | RequestCallback, callback?: RequestCallback): void;\n}\n\n/**\n * Callback used to provide access to processing the raw response of the request being made. *(HTTP loader only)*\n * @param res - The Superagent response object *(For non-HTTP loaders, this object will be like the Superagent\n *        object in that it will have a `text` property whose value is the raw string value being processed.  This was done\n *        for consistency.  There will also be a `location` property containing the location of the path being loaded.)*\n * @param callback - Error-first callback\n * @returns the result of processing the responses\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ProcessResponseCallback<T = any> = (res: Response, callback: ResponseCallback<T>) => void;\n\nexport interface RequestCallback {\n    (err: Error): void;\n    (err: Error | null, req: SuperAgentRequest): void;\n    (err: Error | null, req?: SuperAgentRequest): void;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface ResponseCallback<T = any> {\n    (err: Error): void;\n    (err: Error | null, data: T): void;\n    (err: Error | null, data?: T): void;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"60ef1d32ad85efdf1b7b1219be0bf0abe798314b"},"/Users/rkesters/code/github/path-loader/src/loaders/http.ts":{"path":"/Users/rkesters/code/github/path-loader/src/loaders/http.ts","statementMap":{"0":{"start":{"line":3,"column":16},"end":{"line":11,"column":1}},"1":{"start":{"line":4,"column":28},"end":{"line":4,"column":110}},"2":{"start":{"line":4,"column":91},"end":{"line":4,"column":106}},"3":{"start":{"line":5,"column":4},"end":{"line":10,"column":7}},"4":{"start":{"line":6,"column":36},"end":{"line":6,"column":97}},"5":{"start":{"line":6,"column":42},"end":{"line":6,"column":70}},"6":{"start":{"line":6,"column":85},"end":{"line":6,"column":95}},"7":{"start":{"line":7,"column":35},"end":{"line":7,"column":100}},"8":{"start":{"line":7,"column":41},"end":{"line":7,"column":73}},"9":{"start":{"line":7,"column":88},"end":{"line":7,"column":98}},"10":{"start":{"line":8,"column":32},"end":{"line":8,"column":116}},"11":{"start":{"line":9,"column":8},"end":{"line":9,"column":78}},"12":{"start":{"line":12,"column":22},"end":{"line":14,"column":1}},"13":{"start":{"line":13,"column":4},"end":{"line":13,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"16":{"start":{"line":41,"column":17},"end":{"line":41,"column":34}},"17":{"start":{"line":42,"column":21},"end":{"line":42,"column":59}},"18":{"start":{"line":43,"column":19},"end":{"line":43,"column":55}},"19":{"start":{"line":44,"column":29},"end":{"line":44,"column":78}},"20":{"start":{"line":46,"column":4},"end":{"line":62,"column":5}},"21":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"22":{"start":{"line":48,"column":12},"end":{"line":48,"column":68}},"23":{"start":{"line":50,"column":8},"end":{"line":57,"column":9}},"24":{"start":{"line":51,"column":12},"end":{"line":56,"column":71}},"25":{"start":{"line":59,"column":9},"end":{"line":62,"column":5}},"26":{"start":{"line":61,"column":8},"end":{"line":61,"column":74}},"27":{"start":{"line":72,"column":4},"end":{"line":78,"column":7}},"28":{"start":{"line":73,"column":8},"end":{"line":73,"column":33}},"29":{"start":{"line":77,"column":8},"end":{"line":77,"column":22}},"30":{"start":{"line":80,"column":0},"end":{"line":80,"column":20}},"31":{"start":{"line":82,"column":4},"end":{"line":82,"column":50}},"32":{"start":{"line":85,"column":4},"end":{"line":112,"column":7}},"33":{"start":{"line":86,"column":27},"end":{"line":86,"column":80}},"34":{"start":{"line":87,"column":20},"end":{"line":87,"column":44}},"35":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"36":{"start":{"line":89,"column":12},"end":{"line":89,"column":22}},"37":{"start":{"line":91,"column":22},"end":{"line":91,"column":66}},"38":{"start":{"line":92,"column":28},"end":{"line":92,"column":58}},"39":{"start":{"line":93,"column":8},"end":{"line":111,"column":9}},"40":{"start":{"line":94,"column":12},"end":{"line":98,"column":13}},"41":{"start":{"line":95,"column":27},"end":{"line":95,"column":79}},"42":{"start":{"line":96,"column":26},"end":{"line":96,"column":47}},"43":{"start":{"line":97,"column":16},"end":{"line":97,"column":30}},"44":{"start":{"line":99,"column":22},"end":{"line":99,"column":39}},"45":{"start":{"line":100,"column":12},"end":{"line":100,"column":26}},"46":{"start":{"line":104,"column":12},"end":{"line":109,"column":13}},"47":{"start":{"line":105,"column":30},"end":{"line":105,"column":60}},"48":{"start":{"line":106,"column":34},"end":{"line":106,"column":39}},"49":{"start":{"line":107,"column":16},"end":{"line":107,"column":39}},"50":{"start":{"line":108,"column":16},"end":{"line":108,"column":32}},"51":{"start":{"line":110,"column":12},"end":{"line":110,"column":22}},"52":{"start":{"line":114,"column":0},"end":{"line":114,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":44},"end":{"line":3,"column":45}},"loc":{"start":{"line":3,"column":89},"end":{"line":11,"column":1}},"line":3},"1":{"name":"adopt","decl":{"start":{"line":4,"column":13},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":26},"end":{"line":4,"column":112}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":4,"column":70},"end":{"line":4,"column":71}},"loc":{"start":{"line":4,"column":89},"end":{"line":4,"column":108}},"line":4},"3":{"name":"(anonymous_3)","decl":{"start":{"line":5,"column":36},"end":{"line":5,"column":37}},"loc":{"start":{"line":5,"column":63},"end":{"line":10,"column":5}},"line":5},"4":{"name":"fulfilled","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":26}},"loc":{"start":{"line":6,"column":34},"end":{"line":6,"column":99}},"line":6},"5":{"name":"rejected","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":25}},"loc":{"start":{"line":7,"column":33},"end":{"line":7,"column":102}},"line":7},"6":{"name":"step","decl":{"start":{"line":8,"column":17},"end":{"line":8,"column":21}},"loc":{"start":{"line":8,"column":30},"end":{"line":8,"column":118}},"line":8},"7":{"name":"(anonymous_7)","decl":{"start":{"line":12,"column":56},"end":{"line":12,"column":57}},"loc":{"start":{"line":12,"column":71},"end":{"line":14,"column":1}},"line":12},"8":{"name":"validateOptions","decl":{"start":{"line":45,"column":9},"end":{"line":45,"column":24}},"loc":{"start":{"line":45,"column":34},"end":{"line":63,"column":1}},"line":45},"9":{"name":"load","decl":{"start":{"line":71,"column":9},"end":{"line":71,"column":13}},"loc":{"start":{"line":71,"column":43},"end":{"line":79,"column":1}},"line":71},"10":{"name":"(anonymous_10)","decl":{"start":{"line":72,"column":38},"end":{"line":72,"column":39}},"loc":{"start":{"line":72,"column":52},"end":{"line":74,"column":5}},"line":72},"11":{"name":"(anonymous_11)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":13},"end":{"line":78,"column":5}},"line":76},"12":{"name":"processRequest","decl":{"start":{"line":81,"column":9},"end":{"line":81,"column":23}},"loc":{"start":{"line":81,"column":42},"end":{"line":83,"column":1}},"line":81},"13":{"name":"loadAsync","decl":{"start":{"line":84,"column":9},"end":{"line":84,"column":18}},"loc":{"start":{"line":84,"column":38},"end":{"line":113,"column":1}},"line":84},"14":{"name":"(anonymous_14)","decl":{"start":{"line":85,"column":43},"end":{"line":85,"column":44}},"loc":{"start":{"line":85,"column":56},"end":{"line":112,"column":5}},"line":85}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":16},"end":{"line":11,"column":1}},"type":"binary-expr","locations":[{"start":{"line":3,"column":17},"end":{"line":3,"column":21}},{"start":{"line":3,"column":25},"end":{"line":3,"column":39}},{"start":{"line":3,"column":44},"end":{"line":11,"column":1}}],"line":3},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":109}},"type":"cond-expr","locations":[{"start":{"line":4,"column":56},"end":{"line":4,"column":61}},{"start":{"line":4,"column":64},"end":{"line":4,"column":109}}],"line":4},"2":{"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"type":"binary-expr","locations":[{"start":{"line":5,"column":16},"end":{"line":5,"column":17}},{"start":{"line":5,"column":22},"end":{"line":5,"column":33}}],"line":5},"3":{"loc":{"start":{"line":8,"column":32},"end":{"line":8,"column":115}},"type":"cond-expr","locations":[{"start":{"line":8,"column":46},"end":{"line":8,"column":67}},{"start":{"line":8,"column":70},"end":{"line":8,"column":115}}],"line":8},"4":{"loc":{"start":{"line":9,"column":51},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":51},"end":{"line":9,"column":61}},{"start":{"line":9,"column":65},"end":{"line":9,"column":67}}],"line":9},"5":{"loc":{"start":{"line":12,"column":22},"end":{"line":14,"column":1}},"type":"binary-expr","locations":[{"start":{"line":12,"column":23},"end":{"line":12,"column":27}},{"start":{"line":12,"column":31},"end":{"line":12,"column":51}},{"start":{"line":12,"column":56},"end":{"line":14,"column":1}}],"line":12},"6":{"loc":{"start":{"line":13,"column":11},"end":{"line":13,"column":61}},"type":"cond-expr","locations":[{"start":{"line":13,"column":37},"end":{"line":13,"column":40}},{"start":{"line":13,"column":43},"end":{"line":13,"column":61}}],"line":13},"7":{"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":33}},"type":"binary-expr","locations":[{"start":{"line":13,"column":12},"end":{"line":13,"column":15}},{"start":{"line":13,"column":19},"end":{"line":13,"column":33}}],"line":13},"8":{"loc":{"start":{"line":46,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":62,"column":5}},{"start":{"line":46,"column":4},"end":{"line":62,"column":5}}],"line":46},"9":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"10":{"loc":{"start":{"line":50,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":57,"column":9}},{"start":{"line":50,"column":8},"end":{"line":57,"column":9}}],"line":50},"11":{"loc":{"start":{"line":59,"column":9},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":9},"end":{"line":62,"column":5}},{"start":{"line":59,"column":9},"end":{"line":62,"column":5}}],"line":59},"12":{"loc":{"start":{"line":59,"column":13},"end":{"line":60,"column":52}},"type":"binary-expr","locations":[{"start":{"line":59,"column":13},"end":{"line":59,"column":58}},{"start":{"line":60,"column":8},"end":{"line":60,"column":52}}],"line":59},"13":{"loc":{"start":{"line":86,"column":27},"end":{"line":86,"column":80}},"type":"cond-expr","locations":[{"start":{"line":86,"column":44},"end":{"line":86,"column":72}},{"start":{"line":86,"column":75},"end":{"line":86,"column":80}}],"line":86},"14":{"loc":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},{"start":{"line":88,"column":8},"end":{"line":90,"column":9}}],"line":88},"15":{"loc":{"start":{"line":91,"column":22},"end":{"line":91,"column":66}},"type":"cond-expr","locations":[{"start":{"line":91,"column":48},"end":{"line":91,"column":53}},{"start":{"line":91,"column":56},"end":{"line":91,"column":66}}],"line":91},"16":{"loc":{"start":{"line":94,"column":12},"end":{"line":98,"column":13}},"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":98,"column":13}},{"start":{"line":94,"column":12},"end":{"line":98,"column":13}}],"line":94},"17":{"loc":{"start":{"line":104,"column":12},"end":{"line":109,"column":13}},"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":109,"column":13}},{"start":{"line":104,"column":12},"end":{"line":109,"column":13}}],"line":104}},"s":{"0":1,"1":9,"2":9,"3":9,"4":5,"5":5,"6":0,"7":4,"8":4,"9":4,"10":14,"11":9,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":9,"21":1,"22":0,"23":1,"24":0,"25":8,"26":0,"27":9,"28":5,"29":4,"30":1,"31":9,"32":9,"33":9,"34":9,"35":9,"36":0,"37":9,"38":9,"39":9,"40":9,"41":3,"42":3,"43":1,"44":6,"45":4,"46":4,"47":0,"48":0,"49":0,"50":0,"51":4,"52":1},"f":{"0":9,"1":9,"2":9,"3":9,"4":5,"5":4,"6":14,"7":2,"8":9,"9":9,"10":5,"11":4,"12":9,"13":9,"14":9},"b":{"0":[1,1,1],"1":[0,9],"2":[9,9],"3":[5,9],"4":[9,9],"5":[1,1,1],"6":[0,2],"7":[2,2],"8":[1,8],"9":[0,1],"10":[0,1],"11":[0,8],"12":[8,3],"13":[1,8],"14":[0,9],"15":[1,8],"16":[3,6],"17":[0,4]},"inputSourceMap":{"version":3,"file":"/Users/rkesters/code/github/path-loader/src/loaders/http.ts","sources":["/Users/rkesters/code/github/path-loader/src/loaders/http.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-env node, browser */\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 Jeremy Whitlock\n * Copyright (c) 2022 Robert Kesterson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the 'Software'), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {isString, isUndefined} from 'lodash';\nimport request, {ResponseError} from 'superagent';\nimport {LoadCallback, LoadOptions} from '../typedefs';\nimport Bluebird from 'bluebird';\n\nconst supportedHttpMethods = ['delete', 'get', 'head', 'patch', 'post', 'put'];\n\nfunction validateOptions (options: LoadOptions): Error {\n  if (!isUndefined(options.method)) {\n    if (!isString(options.method)) {\n      return new TypeError('options.method must be a string');\n    }\n    if (!supportedHttpMethods.includes(options.method)) {\n      return new TypeError(\n        'options.method must be one of the following: ' +\n          supportedHttpMethods\n            .slice(0, supportedHttpMethods.length - 1)\n            .join(', ') +\n          ' or ' +\n          supportedHttpMethods[supportedHttpMethods.length - 1]\n      );\n    }\n  } else if (\n    typeof options.prepareRequest !== 'undefined' &&\n    typeof options.prepareRequest !== 'function'\n  ) {\n    return new TypeError('options.prepareRequest must be a function');\n  }\n}\n\n/**\n * Loads a file from an http or https URL.\n *\n * @param  location - The document URL (If relative, location is relative to window.location.origin).\n * @param  options - The loader options\n * @param  callback - The error-first callback\n */\nexport function load (\n  location: string,\n  options: LoadOptions,\n  callback: LoadCallback\n) {\n  loadAsync(location, options).then(\n    (document) => {\n      callback(null, document);\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (err: any) => {\n      callback(err);\n    }\n  );\n}\n\ntype Methods = 'del' | 'get' | 'head' | 'patch' | 'post' | 'put';\n\nfunction processRequest (method: Methods, location: string) {\n  return request[method](location);\n}\n\nexport async function loadAsync (location: string, options: LoadOptions): Promise<string> {\n  const realMethod = options.method ? options.method.toLowerCase() : 'get';\n\n  const err = validateOptions(options);\n\n  if (err) {\n    throw err;\n  }\n\n  const mthd: Methods = (\n    realMethod === 'delete' ? 'del' : realMethod\n  ) as Methods;\n\n  const realRequest = processRequest(mthd, location);\n\n  try {\n  if (options.prepareRequest) {\n    const pr = Bluebird.promisify(options.prepareRequest);\n    const d = await pr(realRequest);\n\n    return d.text;\n  }\n\n\n    const d = await realRequest;\n\n    return d.text;\n  } catch (err: unknown) {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if ((err as any).code === 'ECONNREFUSED') {\n      const error = new Error('Failed connection');\n      const respError = error as ResponseError;\n\n      respError.status = 503;\n\n    throw respError;\n\n    }\n    throw err;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b5ccc938dd426d1de4094f3967f8a6c3b11713d4"},"/Users/rkesters/code/github/path-loader/src/loaders/file.ts":{"path":"/Users/rkesters/code/github/path-loader/src/loaders/file.ts","statementMap":{"0":{"start":{"line":26,"column":16},"end":{"line":34,"column":1}},"1":{"start":{"line":27,"column":28},"end":{"line":27,"column":110}},"2":{"start":{"line":27,"column":91},"end":{"line":27,"column":106}},"3":{"start":{"line":28,"column":4},"end":{"line":33,"column":7}},"4":{"start":{"line":29,"column":36},"end":{"line":29,"column":97}},"5":{"start":{"line":29,"column":42},"end":{"line":29,"column":70}},"6":{"start":{"line":29,"column":85},"end":{"line":29,"column":95}},"7":{"start":{"line":30,"column":35},"end":{"line":30,"column":100}},"8":{"start":{"line":30,"column":41},"end":{"line":30,"column":73}},"9":{"start":{"line":30,"column":88},"end":{"line":30,"column":98}},"10":{"start":{"line":31,"column":32},"end":{"line":31,"column":116}},"11":{"start":{"line":32,"column":8},"end":{"line":32,"column":78}},"12":{"start":{"line":35,"column":22},"end":{"line":37,"column":1}},"13":{"start":{"line":36,"column":4},"end":{"line":36,"column":62}},"14":{"start":{"line":38,"column":0},"end":{"line":38,"column":62}},"15":{"start":{"line":39,"column":0},"end":{"line":39,"column":42}},"16":{"start":{"line":40,"column":13},"end":{"line":40,"column":43}},"17":{"start":{"line":41,"column":15},"end":{"line":41,"column":47}},"18":{"start":{"line":42,"column":17},"end":{"line":42,"column":34}},"19":{"start":{"line":44,"column":4},"end":{"line":48,"column":39}},"20":{"start":{"line":46,"column":8},"end":{"line":46,"column":29}},"21":{"start":{"line":48,"column":24},"end":{"line":48,"column":37}},"22":{"start":{"line":50,"column":0},"end":{"line":50,"column":20}},"23":{"start":{"line":53,"column":4},"end":{"line":70,"column":7}},"24":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"25":{"start":{"line":55,"column":12},"end":{"line":55,"column":69}},"26":{"start":{"line":58,"column":8},"end":{"line":61,"column":9}},"27":{"start":{"line":60,"column":12},"end":{"line":60,"column":45}},"28":{"start":{"line":62,"column":8},"end":{"line":66,"column":9}},"29":{"start":{"line":63,"column":12},"end":{"line":63,"column":61}},"30":{"start":{"line":65,"column":12},"end":{"line":65,"column":71}},"31":{"start":{"line":67,"column":21},"end":{"line":67,"column":60}},"32":{"start":{"line":69,"column":8},"end":{"line":69,"column":97}},"33":{"start":{"line":72,"column":0},"end":{"line":72,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":26,"column":44},"end":{"line":26,"column":45}},"loc":{"start":{"line":26,"column":89},"end":{"line":34,"column":1}},"line":26},"1":{"name":"adopt","decl":{"start":{"line":27,"column":13},"end":{"line":27,"column":18}},"loc":{"start":{"line":27,"column":26},"end":{"line":27,"column":112}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":70},"end":{"line":27,"column":71}},"loc":{"start":{"line":27,"column":89},"end":{"line":27,"column":108}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":36},"end":{"line":28,"column":37}},"loc":{"start":{"line":28,"column":63},"end":{"line":33,"column":5}},"line":28},"4":{"name":"fulfilled","decl":{"start":{"line":29,"column":17},"end":{"line":29,"column":26}},"loc":{"start":{"line":29,"column":34},"end":{"line":29,"column":99}},"line":29},"5":{"name":"rejected","decl":{"start":{"line":30,"column":17},"end":{"line":30,"column":25}},"loc":{"start":{"line":30,"column":33},"end":{"line":30,"column":102}},"line":30},"6":{"name":"step","decl":{"start":{"line":31,"column":17},"end":{"line":31,"column":21}},"loc":{"start":{"line":31,"column":30},"end":{"line":31,"column":118}},"line":31},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":56},"end":{"line":35,"column":57}},"loc":{"start":{"line":35,"column":71},"end":{"line":37,"column":1}},"line":35},"8":{"name":"load","decl":{"start":{"line":43,"column":9},"end":{"line":43,"column":13}},"loc":{"start":{"line":43,"column":43},"end":{"line":49,"column":1}},"line":43},"9":{"name":"(anonymous_9)","decl":{"start":{"line":45,"column":14},"end":{"line":45,"column":15}},"loc":{"start":{"line":45,"column":24},"end":{"line":47,"column":5}},"line":45},"10":{"name":"(anonymous_10)","decl":{"start":{"line":48,"column":15},"end":{"line":48,"column":16}},"loc":{"start":{"line":48,"column":24},"end":{"line":48,"column":37}},"line":48},"11":{"name":"loadAsync","decl":{"start":{"line":51,"column":9},"end":{"line":51,"column":18}},"loc":{"start":{"line":51,"column":38},"end":{"line":71,"column":1}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":53,"column":43},"end":{"line":53,"column":44}},"loc":{"start":{"line":53,"column":56},"end":{"line":70,"column":5}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":16},"end":{"line":34,"column":1}},"type":"binary-expr","locations":[{"start":{"line":26,"column":17},"end":{"line":26,"column":21}},{"start":{"line":26,"column":25},"end":{"line":26,"column":39}},{"start":{"line":26,"column":44},"end":{"line":34,"column":1}}],"line":26},"1":{"loc":{"start":{"line":27,"column":35},"end":{"line":27,"column":109}},"type":"cond-expr","locations":[{"start":{"line":27,"column":56},"end":{"line":27,"column":61}},{"start":{"line":27,"column":64},"end":{"line":27,"column":109}}],"line":27},"2":{"loc":{"start":{"line":28,"column":16},"end":{"line":28,"column":34}},"type":"binary-expr","locations":[{"start":{"line":28,"column":16},"end":{"line":28,"column":17}},{"start":{"line":28,"column":22},"end":{"line":28,"column":33}}],"line":28},"3":{"loc":{"start":{"line":31,"column":32},"end":{"line":31,"column":115}},"type":"cond-expr","locations":[{"start":{"line":31,"column":46},"end":{"line":31,"column":67}},{"start":{"line":31,"column":70},"end":{"line":31,"column":115}}],"line":31},"4":{"loc":{"start":{"line":32,"column":51},"end":{"line":32,"column":67}},"type":"binary-expr","locations":[{"start":{"line":32,"column":51},"end":{"line":32,"column":61}},{"start":{"line":32,"column":65},"end":{"line":32,"column":67}}],"line":32},"5":{"loc":{"start":{"line":35,"column":22},"end":{"line":37,"column":1}},"type":"binary-expr","locations":[{"start":{"line":35,"column":23},"end":{"line":35,"column":27}},{"start":{"line":35,"column":31},"end":{"line":35,"column":51}},{"start":{"line":35,"column":56},"end":{"line":37,"column":1}}],"line":35},"6":{"loc":{"start":{"line":36,"column":11},"end":{"line":36,"column":61}},"type":"cond-expr","locations":[{"start":{"line":36,"column":37},"end":{"line":36,"column":40}},{"start":{"line":36,"column":43},"end":{"line":36,"column":61}}],"line":36},"7":{"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":33}},"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":15}},{"start":{"line":36,"column":19},"end":{"line":36,"column":33}}],"line":36},"8":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"9":{"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":101}},"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":56}},{"start":{"line":54,"column":60},"end":{"line":54,"column":101}}],"line":54},"10":{"loc":{"start":{"line":58,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":61,"column":9}},{"start":{"line":58,"column":8},"end":{"line":61,"column":9}}],"line":58},"11":{"loc":{"start":{"line":62,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":66,"column":9}},{"start":{"line":62,"column":8},"end":{"line":66,"column":9}}],"line":62},"12":{"loc":{"start":{"line":69,"column":30},"end":{"line":69,"column":94}},"type":"cond-expr","locations":[{"start":{"line":69,"column":82},"end":{"line":69,"column":84}},{"start":{"line":69,"column":87},"end":{"line":69,"column":94}}],"line":69},"13":{"loc":{"start":{"line":69,"column":30},"end":{"line":69,"column":79}},"type":"binary-expr","locations":[{"start":{"line":69,"column":30},"end":{"line":69,"column":62}},{"start":{"line":69,"column":66},"end":{"line":69,"column":79}}],"line":69}},"s":{"0":1,"1":0,"2":0,"3":8,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":6,"11":8,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":8,"20":6,"21":2,"22":1,"23":8,"24":8,"25":1,"26":7,"27":2,"28":7,"29":3,"30":3,"31":7,"32":6,"33":1},"f":{"0":8,"1":0,"2":0,"3":8,"4":0,"5":0,"6":6,"7":2,"8":8,"9":6,"10":2,"11":8,"12":8},"b":{"0":[1,1,1],"1":[0,0],"2":[8,8],"3":[6,0],"4":[8,8],"5":[1,1,1],"6":[0,2],"7":[2,2],"8":[1,7],"9":[8,2],"10":[2,5],"11":[3,4],"12":[1,5],"13":[6,6]},"inputSourceMap":{"version":3,"file":"/Users/rkesters/code/github/path-loader/src/loaders/file.ts","sources":["/Users/rkesters/code/github/path-loader/src/loaders/file.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;GAuBG;;;;;;;;;;;;;;;AAEH,4CAAoB;AACpB,gDAAwB;AAExB,mCAA+C;AAW/C,SAAgB,IAAI,CAAU,QAAgB,EAAE,OAAyC,EAAE,QAAsB;IAC7G,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC;SACvB,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;QACX,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACzB,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,GAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,CAAC;AAND,oBAMC;AAGD,SAAsB,SAAS,CAAU,QAAgB,EAAE,OAAyC;;;QAChG,IAAI,CAAC,IAAA,oBAAW,EAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAA,iBAAQ,EAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC/D,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,CAAC;SAC5D;QAED,sCAAsC;QACtC,IAAI,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;YAChC,aAAa;YACb,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACpC;QAED,IAAI,cAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,cAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrD,OAAO,CAAC,GAAG,CAAC,yBAAyB,QAAQ,EAAE,CAAC,CAAC;YACjD,wBAAwB;YACxB,QAAQ,GAAG,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;SACpD;QAED,MAAM,IAAI,GAAG,YAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAE3C,8DAA8D;QAC9D,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAA,OAAO,CAAC,QAAQ,mCAAI,OAAO,CAAQ,CAAC,CAAC;;CAC9D;AArBD,8BAqBC","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 Jeremy Whitlock\n * Copyright (c) 2022 Robert Kesterson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport { LoadCallback, LoadOptions, LoadOptionsBase } from '../typedefs';\nimport { isString, isUndefined } from 'lodash';\n\n/**\n * Loads a file from the filesystem.\n *\n * @param location - The filesystem location (If relative, location is relative to process.cwd()).\n * @param options - The loader options (Unused)\n * @param callback - The error-first callback\n */\nexport function load(location: string, options: LoadOptionsBase, callback: LoadCallback): void;\nexport function load<T = any>(location: string, options: LoadOptions<T>, callback: LoadCallback): void;\nexport function load<T = any>(location: string, options: LoadOptions<T> | LoadOptionsBase, callback: LoadCallback): void {\n    loadAsync(location, options)\n        .then((data) => {\n            callback(null, data);\n        })\n        .catch((err: Error) => callback(err));\n}\nexport async function loadAsync<T = any>(location: string, options: LoadOptions<T>): Promise<string>;\nexport async function loadAsync(location: string, options: LoadOptionsBase): Promise<string>;\nexport async function loadAsync<T = any>(location: string, options: LoadOptionsBase | LoadOptions<T>): Promise<string> {\n    if (!isUndefined(options.encoding) && !isString(options.encoding)) {\n        throw new TypeError(`options.encoding must be a string`);\n    }\n\n    // Strip the scheme portion of the URI\n    if (location.startsWith('file://')) {\n        // Handle URI\n        location = location.substring(7);\n    }\n\n    if (path.resolve(location) !== path.normalize(location)) {\n        console.log(`Resolve relative path ${location}`);\n        // Handle relative paths\n        location = path.resolve(process.cwd(), location);\n    }\n\n    const data = fs.readFileSync(location, {});\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return data.toString((options.encoding ?? 'utf-8') as any);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fedb6f45308a37f5f65ba11b6310b7e35256d79b"}}